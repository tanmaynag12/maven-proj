/*
 * jQuery Autocomplete plugin 1.1
 *
 * Copyright (c) 2009 JÃ¶rn Zaefferer
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id: jquery.autocomplete.js 15 2009-08-22 10:30:27Z joern.zaefferer $
 */

;(function($) {
	
$.fn.extend({
	autocomplete: function(urlOrData, options) {
		var isUrl = typeof urlOrData == "string";
		options = $.extend({}, $.Autocompleter.defaults, {
			url: isUrl ? urlOrData : null,
			data: isUrl ? null : urlOrData,
			delay: isUrl ? $.Autocompleter.defaults.delay : 10,
			max: options && !options.scroll ? 10 : 150
		}, options);
		
		// if highlight is set to false, replace it with a do-nothing function
		options.highlight = options.highlight || function(value) { return value; };
		
		// if the formatMatch option is not specified, then use formatItem for backwards compatibility
		options.formatMatch = options.formatMatch || options.formatItem;
		
		return this.each(function() {
			new $.Autocompleter(this, options);
		});
	},
	result: function(handler) {
		return this.bind("result", handler);
	},
	search: function(handler) {
		return this.trigger("search", [handler]);
	},
	flushCache: function() {
		return this.trigger("flushCache");
	},
	setOptions: function(options){
		return this.trigger("setOptions", [options]);
	},
	unautocomplete: function() {
		return this.trigger("unautocomplete");
	}
});

$.Autocompleter = function(input, options) {

	var KEY = {
		UP: 38,
		DOWN: 40,
		DEL: 46,
		TAB: 9,
		RETURN: 13,
		ESC: 27,
		COMMA: 188,
		PAGEUP: 33,
		PAGEDOWN: 34,
		BACKSPACE: 8
	};

	// Create $ object for input element
	var $input = $(input).attr("autocomplete", "off").addClass(options.inputClass);

	var timeout;
	var previousValue = "";
	var cache = $.Autocompleter.Cache(options);
	var hasFocus = 0;
	var lastKeyPressCode;
	var config = {
		mouseDownOnSelect: false
	};
	var select = $.Autocompleter.Select(options, input, selectCurrent, config);
	
	var blockSubmit;
	
	// prevent form submit in opera when selecting with return key
	$.browser.opera && $(input.form).bind("submit.autocomplete", function() {
		if (blockSubmit) {
			blockSubmit = false;
			return false;
		}
	});
	
	// only opera doesn't trigger keydown multiple times while pressed, others don't work with keypress at all
	$input.bind(($.browser.opera ? "keypress" : "keydown") + ".autocomplete", function(event) {
		// a keypress means the input has focus
		// avoids issue where input had focus before the autocomplete was applied
		hasFocus = 1;
		// track last key pressed
		lastKeyPressCode = event.keyCode;
		switch(event.keyCode) {
		
			case KEY.UP:
				event.preventDefault();
				if ( select.visible() ) {
					select.prev();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.DOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.next();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEUP:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageUp();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEDOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageDown();
				} else {
					onChange(0, true);
				}
				break;
			
			// matches also semicolon
			case options.multiple && $.trim(options.multipleSeparator) == "," && KEY.COMMA:
			case KEY.TAB:
			case KEY.RETURN:
				if( selectCurrent() ) {
					// stop default to prevent a form submit, Opera needs special handling
					event.preventDefault();
					blockSubmit = true;
					return false;
				}
				break;
				
			case KEY.ESC:
				select.hide();
				break;
				
			default:
				clearTimeout(timeout);
				timeout = setTimeout(onChange, options.delay);
				break;
		}
	}).focus(function(){
		// track whether the field has focus, we shouldn't process any
		// results if the field no longer has focus
		hasFocus++;
	}).blur(function() {
		hasFocus = 0;
		if (!config.mouseDownOnSelect) {
			hideResults();
		}
	}).click(function() {
		// show select when clicking in a focused field
		if ( hasFocus++ > 1 && !select.visible() ) {
			onChange(0, true);
		}
	}).bind("search", function() {
		// TODO why not just specifying both arguments?
		var fn = (arguments.length > 1) ? arguments[1] : null;
		function findValueCallback(q, data) {
			var result;
			if( data && data.length ) {
				for (var i=0; i < data.length; i++) {
					if( data[i].result.toLowerCase() == q.toLowerCase() ) {
						result = data[i];
						break;
					}
				}
			}
			if( typeof fn == "function" ) fn(result);
			else $input.trigger("result", result && [result.data, result.value]);
		}
		$.each(trimWords($input.val()), function(i, value) {
			request(value, findValueCallback, findValueCallback);
		});
	}).bind("flushCache", function() {
		cache.flush();
	}).bind("setOptions", function() {
		$.extend(options, arguments[1]);
		// if we've updated the data, repopulate
		if ( "data" in arguments[1] )
			cache.populate();
	}).bind("unautocomplete", function() {
		select.unbind();
		$input.unbind();
		$(input.form).unbind(".autocomplete");
	});
	
	
	function selectCurrent() {
		var selected = select.selected();
		if( !selected )
			return false;
		
		var v = selected.result;
		previousValue = v;
		
		if ( options.multiple ) {
			var words = trimWords($input.val());
			if ( words.length > 1 ) {
				var seperator = options.multipleSeparator.length;
				var cursorAt = $(input).selection().start;
				var wordAt, progress = 0;
				$.each(words, function(i, word) {
					progress += word.length;
					if (cursorAt <= progress) {
						wordAt = i;
						return false;
					}
					progress += seperator;
				});
				words[wordAt] = v;
				// TODO this should set the cursor to the right position, but it gets overriden somewhere
				//$.Autocompleter.Selection(input, progress + seperator, progress + seperator);
				v = words.join( options.multipleSeparator );
			}
			v += options.multipleSeparator;
		}
		
		$input.val(v);
		hideResultsNow();
		$input.trigger("result", [selected.data, selected.value]);
		return true;
	}
	
	function onChange(crap, skipPrevCheck) {
		if( lastKeyPressCode == KEY.DEL ) {
			select.hide();
			return;
		}
		
		var currentValue = $input.val();
		
		if ( !skipPrevCheck && currentValue == previousValue )
			return;
		
		previousValue = currentValue;
		
		currentValue = lastWord(currentValue);
		if ( currentValue.length >= options.minChars) {
			$input.addClass(options.loadingClass);
			if (!options.matchCase)
				currentValue = currentValue.toLowerCase();
			request(currentValue, receiveData, hideResultsNow);
		} else {
			stopLoading();
			select.hide();
		}
	};
	
	function trimWords(value) {
		if (!value)
			return [""];
		if (!options.multiple)
			return [$.trim(value)];
		return $.map(value.split(options.multipleSeparator), function(word) {
			return $.trim(value).length ? $.trim(word) : null;
		});
	}
	
	function lastWord(value) {
		if ( !options.multiple )
			return value;
		var words = trimWords(value);
		if (words.length == 1) 
			return words[0];
		var cursorAt = $(input).selection().start;
		if (cursorAt == value.length) {
			words = trimWords(value)
		} else {
			words = trimWords(value.replace(value.substring(cursorAt), ""));
		}
		return words[words.length - 1];
	}
	
	// fills in the input box w/the first match (assumed to be the best match)
	// q: the term entered
	// sValue: the first matching result
	function autoFill(q, sValue){
		// autofill in the complete box w/the first match as long as the user hasn't entered in more data
		// if the last user key pressed was backspace, don't autofill
		if( options.autoFill && (lastWord($input.val()).toLowerCase() == q.toLowerCase()) && lastKeyPressCode != KEY.BACKSPACE ) {
			// fill in the value (keep the case the user has typed)
			$input.val($input.val() + sValue.substring(lastWord(previousValue).length));
			// select the portion of the value not typed by the user (so the next character will erase)
			$(input).selection(previousValue.length, previousValue.length + sValue.length);
		}
	};

	function hideResults() {
		clearTimeout(timeout);
		timeout = setTimeout(hideResultsNow, 200);
	};

	function hideResultsNow() {
		var wasVisible = select.visible();
		select.hide();
		clearTimeout(timeout);
		stopLoading();
		if (options.mustMatch) {
			// call search and run callback
			$input.search(
				function (result){
					// if no value found, clear the input box
					if( !result ) {
						if (options.multiple) {
							var words = trimWords($input.val()).slice(0, -1);
							$input.val( words.join(options.multipleSeparator) + (words.length ? options.multipleSeparator : "") );
						}
						else {
							$input.val( "" );
							$input.trigger("result", null);
						}
					}
				}
			);
		}
	};

	function receiveData(q, data) {
		if ( data && data.length && hasFocus ) {
			stopLoading();
			select.display(data, q);
			autoFill(q, data[0].value);
			select.show();
		} else {
			hideResultsNow();
		}
	};

	function request(term, success, failure) {
		if (!options.matchCase)
			term = term.toLowerCase();
		var data = cache.load(term);
		// recieve the cached data
		if (data && data.length) {
			success(term, data);
		// if an AJAX url has been supplied, try loading the data now
		} else if( (typeof options.url == "string") && (options.url.length > 0) ){
			
			var extraParams = {
				timestamp: +new Date()
			};
			$.each(options.extraParams, function(key, param) {
				extraParams[key] = typeof param == "function" ? param() : param;
			});
			
			$.ajax({
				// try to leverage ajaxQueue plugin to abort previous requests
				mode: "abort",
				// limit abortion to this input
				port: "autocomplete" + input.name,
				dataType: options.dataType,
				url: options.url,
				data: $.extend({
					q: lastWord(term),
					limit: options.max
				}, extraParams),
				success: function(data) {
					var parsed = options.parse && options.parse(data) || parse(data);
					cache.add(term, parsed);
					success(term, parsed);
				}
			});
		} else {
			// if we have a failure, we need to empty the list -- this prevents the the [TAB] key from selecting the last successful match
			select.emptyList();
			failure(term);
		}
	};
	
	function parse(data) {
		var parsed = [];
		var rows = data.split("\n");
		for (var i=0; i < rows.length; i++) {
			var row = $.trim(rows[i]);
			if (row) {
				row = row.split("|");
				parsed[parsed.length] = {
					data: row,
					value: row[0],
					result: options.formatResult && options.formatResult(row, row[0]) || row[0]
				};
			}
		}
		return parsed;
	};

	function stopLoading() {
		$input.removeClass(options.loadingClass);
	};

};

$.Autocompleter.defaults = {
	inputClass: "ac_input",
	resultsClass: "ac_results",
	loadingClass: "ac_loading",
	minChars: 1,
	delay: 400,
	matchCase: false,
	matchSubset: true,
	matchContains: false,
	cacheLength: 10,
	max: 100,
	mustMatch: false,
	extraParams: {},
	selectFirst: true,
	formatItem: function(row) { return row[0]; },
	formatMatch: null,
	autoFill: false,
	width: 0,
	multiple: false,
	multipleSeparator: ", ",
	highlight: function(value, term) {
		return value.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
	},
    scroll: true,
    scrollHeight: 180
};

$.Autocompleter.Cache = function(options) {

	var data = {};
	var length = 0;
	
	function matchSubset(s, sub) {
		if (!options.matchCase) 
			s = s.toLowerCase();
		var i = s.indexOf(sub);
		if (options.matchContains == "word"){
			i = s.toLowerCase().search("\\b" + sub.toLowerCase());
		}
		if (i == -1) return false;
		return i == 0 || options.matchContains;
	};
	
	function add(q, value) {
		if (length > options.cacheLength){
			flush();
		}
		if (!data[q]){ 
			length++;
		}
		data[q] = value;
	}
	
	function populate(){
		if( !options.data ) return false;
		// track the matches
		var stMatchSets = {},
			nullData = 0;

		// no url was specified, we need to adjust the cache length to make sure it fits the local data store
		if( !options.url ) options.cacheLength = 1;
		
		// track all options for minChars = 0
		stMatchSets[""] = [];
		
		// loop through the array and create a lookup structure
		for ( var i = 0, ol = options.data.length; i < ol; i++ ) {
			var rawValue = options.data[i];
			// if rawValue is a string, make an array otherwise just reference the array
			rawValue = (typeof rawValue == "string") ? [rawValue] : rawValue;
			
			var value = options.formatMatch(rawValue, i+1, options.data.length);
			if ( value === false )
				continue;
				
			var firstChar = value.charAt(0).toLowerCase();
			// if no lookup array for this character exists, look it up now
			if( !stMatchSets[firstChar] ) 
				stMatchSets[firstChar] = [];

			// if the match is a string
			var row = {
				value: value,
				data: rawValue,
				result: options.formatResult && options.formatResult(rawValue) || value
			};
			
			// push the current match into the set list
			stMatchSets[firstChar].push(row);

			// keep track of minChars zero items
			if ( nullData++ < options.max ) {
				stMatchSets[""].push(row);
			}
		};

		// add the data items to the cache
		$.each(stMatchSets, function(i, value) {
			// increase the cache size
			options.cacheLength++;
			// add to the cache
			add(i, value);
		});
	}
	
	// populate any existing data
	setTimeout(populate, 25);
	
	function flush(){
		data = {};
		length = 0;
	}
	
	return {
		flush: flush,
		add: add,
		populate: populate,
		load: function(q) {
			if (!options.cacheLength || !length)
				return null;
			/* 
			 * if dealing w/local data and matchContains than we must make sure
			 * to loop through all the data collections looking for matches
			 */
			if( !options.url && options.matchContains ){
				// track all matches
				var csub = [];
				// loop through all the data grids for matches
				for( var k in data ){
					// don't search through the stMatchSets[""] (minChars: 0) cache
					// this prevents duplicates
					if( k.length > 0 ){
						var c = data[k];
						$.each(c, function(i, x) {
							// if we've got a match, add it to the array
							if (matchSubset(x.value, q)) {
								csub.push(x);
							}
						});
					}
				}				
				return csub;
			} else 
			// if the exact item exists, use it
			if (data[q]){
				return data[q];
			} else
			if (options.matchSubset) {
				for (var i = q.length - 1; i >= options.minChars; i--) {
					var c = data[q.substr(0, i)];
					if (c) {
						var csub = [];
						$.each(c, function(i, x) {
							if (matchSubset(x.value, q)) {
								csub[csub.length] = x;
							}
						});
						return csub;
					}
				}
			}
			return null;
		}
	};
};

$.Autocompleter.Select = function (options, input, select, config) {
	var CLASSES = {
		ACTIVE: "ac_over"
	};
	
	var listItems,
		active = -1,
		data,
		term = "",
		needsInit = true,
		element,
		list;
	
	// Create results
	function init() {
		if (!needsInit)
			return;
		element = $("<div/>")
		.hide()
		.addClass(options.resultsClass)
		.css("position", "absolute")
		.appendTo(document.body);
	
		list = $("<ul/>").appendTo(element).mouseover( function(event) {
			if(target(event).nodeName && target(event).nodeName.toUpperCase() == 'LI') {
	            active = $("li", list).removeClass(CLASSES.ACTIVE).index(target(event));
			    $(target(event)).addClass(CLASSES.ACTIVE);            
	        }
		}).click(function(event) {
			$(target(event)).addClass(CLASSES.ACTIVE);
			select();
			// TODO provide option to avoid setting focus again after selection? useful for cleanup-on-focus
			input.focus();
			return false;
		}).mousedown(function() {
			config.mouseDownOnSelect = true;
		}).mouseup(function() {
			config.mouseDownOnSelect = false;
		});
		
		if( options.width > 0 )
			element.css("width", options.width);
			
		needsInit = false;
	} 
	
	function target(event) {
		var element = event.target;
		while(element && element.tagName != "LI")
			element = element.parentNode;
		// more fun with IE, sometimes event.target is empty, just ignore it then
		if(!element)
			return [];
		return element;
	}

	function moveSelect(step) {
		listItems.slice(active, active + 1).removeClass(CLASSES.ACTIVE);
		movePosition(step);
        var activeItem = listItems.slice(active, active + 1).addClass(CLASSES.ACTIVE);
        if(options.scroll) {
            var offset = 0;
            listItems.slice(0, active).each(function() {
				offset += this.offsetHeight;
			});
            if((offset + activeItem[0].offsetHeight - list.scrollTop()) > list[0].clientHeight) {
                list.scrollTop(offset + activeItem[0].offsetHeight - list.innerHeight());
            } else if(offset < list.scrollTop()) {
                list.scrollTop(offset);
            }
        }
	};
	
	function movePosition(step) {
		active += step;
		if (active < 0) {
			active = listItems.size() - 1;
		} else if (active >= listItems.size()) {
			active = 0;
		}
	}
	
	function limitNumberOfItems(available) {
		return options.max && options.max < available
			? options.max
			: available;
	}
	
	function fillList() {
		list.empty();
		var max = limitNumberOfItems(data.length);
		for (var i=0; i < max; i++) {
			if (!data[i])
				continue;
			var formatted = options.formatItem(data[i].data, i+1, max, data[i].value, term);
			if ( formatted === false )
				continue;
			var li = $("<li/>").html( options.highlight(formatted, term) ).addClass(i%2 == 0 ? "ac_even" : "ac_odd").appendTo(list)[0];
			$.data(li, "ac_data", data[i]);
		}
		listItems = list.find("li");
		if ( options.selectFirst ) {
			listItems.slice(0, 1).addClass(CLASSES.ACTIVE);
			active = 0;
		}
		// apply bgiframe if available
		if ( $.fn.bgiframe )
			list.bgiframe();
	}
	
	return {
		display: function(d, q) {
			init();
			data = d;
			term = q;
			fillList();
		},
		next: function() {
			moveSelect(1);
		},
		prev: function() {
			moveSelect(-1);
		},
		pageUp: function() {
			if (active != 0 && active - 8 < 0) {
				moveSelect( -active );
			} else {
				moveSelect(-8);
			}
		},
		pageDown: function() {
			if (active != listItems.size() - 1 && active + 8 > listItems.size()) {
				moveSelect( listItems.size() - 1 - active );
			} else {
				moveSelect(8);
			}
		},
		hide: function() {
			element && element.hide();
			listItems && listItems.removeClass(CLASSES.ACTIVE);
			active = -1;
		},
		visible : function() {
			return element && element.is(":visible");
		},
		current: function() {
			return this.visible() && (listItems.filter("." + CLASSES.ACTIVE)[0] || options.selectFirst && listItems[0]);
		},
		show: function() {
			var offset = $(input).offset();
			element.css({
				width: typeof options.width == "string" || options.width > 0 ? options.width : $(input).width(),
				top: offset.top + input.offsetHeight,
				left: offset.left
			}).show();
            if(options.scroll) {
                list.scrollTop(0);
                list.css({
					maxHeight: options.scrollHeight,
					overflow: 'auto'
				});
				
                if($.browser.msie && typeof document.body.style.maxHeight === "undefined") {
					var listHeight = 0;
					listItems.each(function() {
						listHeight += this.offsetHeight;
					});
					var scrollbarsVisible = listHeight > options.scrollHeight;
                    list.css('height', scrollbarsVisible ? options.scrollHeight : listHeight );
					if (!scrollbarsVisible) {
						// IE doesn't recalculate width when scrollbar disappears
						listItems.width( list.width() - parseInt(listItems.css("padding-left")) - parseInt(listItems.css("padding-right")) );
					}
                }
                
            }
		},
		selected: function() {
			var selected = listItems && listItems.filter("." + CLASSES.ACTIVE).removeClass(CLASSES.ACTIVE);
			return selected && selected.length && $.data(selected[0], "ac_data");
		},
		emptyList: function (){
			list && list.empty();
		},
		unbind: function() {
			element && element.remove();
		}
	};
};

$.fn.selection = function(start, end) {
	if (start !== undefined) {
		return this.each(function() {
			if( this.createTextRange ){
				var selRange = this.createTextRange();
				if (end === undefined || start == end) {
					selRange.move("character", start);
					selRange.select();
				} else {
					selRange.collapse(true);
					selRange.moveStart("character", start);
					selRange.moveEnd("character", end);
					selRange.select();
				}
			} else if( this.setSelectionRange ){
				this.setSelectionRange(start, end);
			} else if( this.selectionStart ){
				this.selectionStart = start;
				this.selectionEnd = end;
			}
		});
	}
	var field = this[0];
	if ( field.createTextRange ) {
		var range = document.selection.createRange(),
			orig = field.value,
			teststring = "<->",
			textLength = range.text.length;
		range.text = teststring;
		var caretAt = field.value.indexOf(teststring);
		field.value = orig;
		this.selection(caretAt, caretAt + textLength);
		return {
			start: caretAt,
			end: caretAt + textLength
		}
	} else if( field.selectionStart !== undefined ){
		return {
			start: field.selectionStart,
			end: field.selectionEnd
		}
	}
};

})(jQuery);        |â  x|â   20250331133932-8l_â  ´V¨1   https://erp.cmrit.ac.in/js/jquery.autocomplete.js      S  /*
 * jQuery Autocomplete plugin 1.1
 *
 * Copyright (c) 2009 JÃÂ¶rn Zaefferer
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id: jquery.autocomplete.js 15 2009-08-22 10:30:27Z joern.zaefferer $
 */

;(function($) {
	
$.fn.extend({
	autocomplete: function(urlOrData, options) {
		var isUrl = typeof urlOrData == "string";
		options = $.extend({}, $.Autocompleter.defaults, {
			url: isUrl ? urlOrData : null,
			data: isUrl ? null : urlOrData,
			delay: isUrl ? $.Autocompleter.defaults.delay : 10,
			max: options && !options.scroll ? 10 : 150
		}, options);
		
		// if highlight is set to false, replace it with a do-nothing function
		options.highlight = options.highlight || function(value) { return value; };
		
		// if the formatMatch option is not specified, then use formatItem for backwards compatibility
		options.formatMatch = options.formatMatch || options.formatItem;
		
		return this.each(function() {
			new $.Autocompleter(this, options);
		});
	},
	result: function(handler) {
		return this.bind("result", handler);
	},
	search: function(handler) {
		return this.trigger("search", [handler]);
	},
	flushCache: function() {
		return this.trigger("flushCache");
	},
	setOptions: function(options){
		return this.trigger("setOptions", [options]);
	},
	unautocomplete: function() {
		return this.trigger("unautocomplete");
	}
});

$.Autocompleter = function(input, options) {

	var KEY = {
		UP: 38,
		DOWN: 40,
		DEL: 46,
		TAB: 9,
		RETURN: 13,
		ESC: 27,
		COMMA: 188,
		PAGEUP: 33,
		PAGEDOWN: 34,
		BACKSPACE: 8
	};

	// Create $ object for input element
	var $input = $(input).attr("autocomplete", "off").addClass(options.inputClass);

	var timeout;
	var previousValue = "";
	var cache = $.Autocompleter.Cache(options);
	var hasFocus = 0;
	var lastKeyPressCode;
	var config = {
		mouseDownOnSelect: false
	};
	var select = $.Autocompleter.Select(options, input, selectCurrent, config);
	
	var blockSubmit;
	
	// prevent form submit in opera when selecting with return key
	$.browser.opera && $(input.form).bind("submit.autocomplete", function() {
		if (blockSubmit) {
			blockSubmit = false;
			return false;
		}
	});
	
	// only opera doesn't trigger keydown multiple times while pressed, others don't work with keypress at all
	$input.bind(($.browser.opera ? "keypress" : "keydown") + ".autocomplete", function(event) {
		// a keypress means the input has focus
		// avoids issue where input had focus before the autocomplete was applied
		hasFocus = 1;
		// track last key pressed
		lastKeyPressCode = event.keyCode;
		switch(event.keyCode) {
		
			case KEY.UP:
				event.preventDefault();
				if ( select.visible() ) {
					select.prev();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.DOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.next();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEUP:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageUp();
				} else {
					onChange(0, true);
				}
				break;
				
			case KEY.PAGEDOWN:
				event.preventDefault();
				if ( select.visible() ) {
					select.pageDown();
				} else {
					onChange(0, true);
				}
				break;
			
			// matches also semicolon
			case options.multiple && $.trim(options.multipleSeparator) == "," && KEY.COMMA:
			case KEY.TAB:
			case KEY.RETURN:
				if( selectCurrent() ) {
					// stop default to prevent a form submit, Opera needs special handling
					event.preventDefault();
					blockSubmit = true;
					return false;
				}
				break;
				
			case KEY.ESC:
				select.hide();
				break;
				
			default:
				clearTimeout(timeout);
				timeout = setTimeout(onChange, options.delay);
				break;
		}
	}).focus(function(){
		// track whether the field has focus, we shouldn't process any
		// results if the field no longer has focus
		hasFocus++;
	}).blur(function() {
		hasFocus = 0;
		if (!config.mouseDownOnSelect) {
			hideResults();
		}
	}).click(function() {
		// show select when clicking in a focused field
		if ( hasFocus++ > 1 && !select.visible() ) {
			onChange(0, true);
		}
	}).bind("search", function() {
		// TODO why not just specifying both arguments?
		var fn = (arguments.length > 1) ? arguments[1] : null;
		function findValueCallback(q, data) {
			var result;
			if( data && data.length ) {
				for (var i=0; i < data.length; i++) {
					if( data[i].result.toLowerCase() == q.toLowerCase() ) {
						result = data[i];
						break;
					}
				}
			}
			if( typeof fn == "function" ) fn(result);
			else $input.trigger("result", result && [result.data, result.value]);
		}
		$.each(trimWords($input.val()), function(i, value) {
			request(value, findValueCallback, findValueCallback);
		});
	}).bind("flushCache", function() {
		cache.flush();
	}).bind("setOptions", function() {
		$.extend(options, arguments[1]);
		// if we've updated the data, repopulate
		if ( "data" in arguments[1] )
			cache.populate();
	}).bind("unautocomplete", function() {
		select.unbind();
		$input.unbind();
		$(input.form).unbind(".autocomplete");
	});
	
	
	function selectCurrent() {
		var selected = select.selected();
		if( !selected )
			return false;
		
		var v = selected.result;
		previousValue = v;
		
		if ( options.multiple ) {
			var words = trimWords($input.val());
			if ( words.length > 1 ) {
				var seperator = options.multipleSeparator.length;
				var cursorAt = $(input).selection().start;
				var wordAt, progress = 0;
				$.each(words, function(i, word) {
					progress += word.length;
					if (cursorAt <= progress) {
						wordAt = i;
						return false;
					}
					progress += seperator;
				});
				words[wordAt] = v;
				// TODO this should set the cursor to the right position, but it gets overriden somewhere
				//$.Autocompleter.Selection(input, progress + seperator, progress + seperator);
				v = words.join( options.multipleSeparator );
			}
			v += options.multipleSeparator;
		}
		
		$input.val(v);
		hideResultsNow();
		$input.trigger("result", [selected.data, selected.value]);
		return true;
	}
	
	function onChange(crap, skipPrevCheck) {
		if( lastKeyPressCode == KEY.DEL ) {
			select.hide();
			return;
		}
		
		var currentValue = $input.val();
		
		if ( !skipPrevCheck && currentValue == previousValue )
			return;
		
		previousValue = currentValue;
		
		currentValue = lastWord(currentValue);
		if ( currentValue.length >= options.minChars) {
			$input.addClass(options.loadingClass);
			if (!options.matchCase)
				currentValue = currentValue.toLowerCase();
			request(currentValue, receiveData, hideResultsNow);
		} else {
			stopLoading();
			select.hide();
		}
	};
	
	function trimWords(value) {
		if (!value)
			return [""];
		if (!options.multiple)
			return [$.trim(value)];
		return $.map(value.split(options.multipleSeparator), function(word) {
			return $.trim(value).length ? $.trim(word) : null;
		});
	}
	
	function lastWord(value) {
		if ( !options.multiple )
			return value;
		var words = trimWords(value);
		if (words.length == 1) 
			return words[0];
		var cursorAt = $(input).selection().start;
		if (cursorAt == value.length) {
			words = trimWords(value)
		} else {
			words = trimWords(value.replace(value.substring(cursorAt), ""));
		}
		return words[words.length - 1];
	}
	
	// fills in the input box w/the first match (assumed to be the best match)
	// q: the term entered
	// sValue: the first matching result
	function autoFill(q, sValue){
		// autofill in the complete box w/the first match as long as the user hasn't entered in more data
		// if the last user key pressed was backspace, don't autofill
		if( options.autoFill && (lastWord($input.val()).toLowerCase() == q.toLowerCase()) && lastKeyPressCode != KEY.BACKSPACE ) {
			// fill in the value (keep the case the user has typed)
			$input.val($input.val() + sValue.substring(lastWord(previousValue).length));
			// select the portion of the value not typed by the user (so the next character will erase)
			$(input).selection(previousValue.length, previousValue.length + sValue.length);
		}
	};

	function hideResults() {
		clearTimeout(timeout);
		timeout = setTimeout(hideResultsNow, 200);
	};

	function hideResultsNow() {
		var wasVisible = select.visible();
		select.hide();
		clearTimeout(timeout);
		stopLoading();
		if (options.mustMatch) {
			// call search and run callback
			$input.search(
				function (result){
					// if no value found, clear the input box
					if( !result ) {
						if (options.multiple) {
							var words = trimWords($input.val()).slice(0, -1);
							$input.val( words.join(options.multipleSeparator) + (words.length ? options.multipleSeparator : "") );
						}
						else {
							$input.val( "" );
							$input.trigger("result", null);
						}
					}
				}
			);
		}
	};

	function receiveData(q, data) {
		if ( data && data.length && hasFocus ) {
			stopLoading();
			select.display(data, q);
			autoFill(q, data[0].value);
			select.show();
		} else {
			hideResultsNow();
		}
	};

	function request(term, success, failure) {
		if (!options.matchCase)
			term = term.toLowerCase();
		var data = cache.load(term);
		// recieve the cached data
		if (data && data.length) {
			success(term, data);
		// if an AJAX url has been supplied, try loading the data now
		} else if( (typeof options.url == "string") && (options.url.length > 0) ){
			
			var extraParams = {
				timestamp: +new Date()
			};
			$.each(options.extraParams, function(key, param) {
				extraParams[key] = typeof param == "function" ? param() : param;
			});
			
			$.ajax({
				// try to leverage ajaxQueue plugin to abort previous requests
				mode: "abort",
				// limit abortion to this input
				port: "autocomplete" + input.name,
				dataType: options.dataType,
				url: options.url,
				data: $.extend({
					q: lastWord(term),
					limit: options.max
				}, extraParams),
				success: function(data) {
					var parsed = options.parse && options.parse(data) || parse(data);
					cache.add(term, parsed);
					success(term, parsed);
				}
			});
		} else {
			// if we have a failure, we need to empty the list -- this prevents the the [TAB] key from selecting the last successful match
			select.emptyList();
			failure(term);
		}
	};
	
	function parse(data) {
		var parsed = [];
		var rows = data.split("\n");
		for (var i=0; i < rows.length; i++) {
			var row = $.trim(rows[i]);
			if (row) {
				row = row.split("|");
				parsed[parsed.length] = {
					data: row,
					value: row[0],
					result: options.formatResult && options.formatResult(row, row[0]) || row[0]
				};
			}
		}
		return parsed;
	};

	function stopLoading() {
		$input.removeClass(options.loadingClass);
	};

};

$.Autocompleter.defaults = {
	inputClass: "ac_input",
	resultsClass: "ac_results",
	loadingClass: "ac_loading",
	minChars: 1,
	delay: 400,
	matchCase: false,
	matchSubset: true,
	matchContains: false,
	cacheLength: 10,
	max: 100,
	mustMatch: false,
	extraParams: {},
	selectFirst: true,
	formatItem: function(row) { return row[0]; },
	formatMatch: null,
	autoFill: false,
	width: 0,
	multiple: false,
	multipleSeparator: ", ",
	highlight: function(value, term) {
		return value.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
	},
    scroll: true,
    scrollHeight: 180
};

$.Autocompleter.Cache = function(options) {

	var data = {};
	var length = 0;
	
	function matchSubset(s, sub) {
		if (!options.matchCase) 
			s = s.toLowerCase();
		var i = s.indexOf(sub);
		if (options.matchContains == "word"){
			i = s.toLowerCase().search("\\b" + sub.toLowerCase());
		}
		if (i == -1) return false;
		return i == 0 || options.matchContains;
	};
	
	function add(q, value) {
		if (length > options.cacheLength){
			flush();
		}
		if (!data[q]){ 
			length++;
		}
		data[q] = value;
	}
	
	function populate(){
		if( !options.data ) return false;
		// track the matches
		var stMatchSets = {},
			nullData = 0;

		// no url was specified, we need to adjust the cache length to make sure it fits the local data store
		if( !options.url ) options.cacheLength = 1;
		
		// track all options for minChars = 0
		stMatchSets[""] = [];
		
		// loop through the array and create a lookup structure
		for ( var i = 0, ol = options.data.length; i < ol; i++ ) {
			var rawValue = options.data[i];
			// if rawValue is a string, make an array otherwise just reference the array
			rawValue = (typeof rawValue == "string") ? [rawValue] : rawValue;
			
			var value = options.formatMatch(rawValue, i+1, options.data.length);
			if ( value === false )
				continue;
				
			var firstChar = value.charAt(0).toLowerCase();
			// if no lookup array for this character exists, look it up now
			if( !stMatchSets[firstChar] ) 
				stMatchSets[firstChar] = [];

			// if the match is a string
			var row = {
				value: value,
				data: rawValue,
				result: options.formatResult && options.formatResult(rawValue) || value
			};
			
			// push the current match into the set list
			stMatchSets[firstChar].push(row);

			// keep track of minChars zero items
			if ( nullData++ < options.max ) {
				stMatchSets[""].push(row);
			}
		};

		// add the data items to the cache
		$.each(stMatchSets, function(i, value) {
			// increase the cache size
			options.cacheLength++;
			// add to the cache
			add(i, value);
		});
	}
	
	// populate any existing data
	setTimeout(populate, 25);
	
	function flush(){
		data = {};
		length = 0;
	}
	
	return {
		flush: flush,
		add: add,
		populate: populate,
		load: function(q) {
			if (!options.cacheLength || !length)
				return null;
			/* 
			 * if dealing w/local data and matchContains than we must make sure
			 * to loop through all the data collections looking for matches
			 */
			if( !options.url && options.matchContains ){
				// track all matches
				var csub = [];
				// loop through all the data grids for matches
				for( var k in data ){
					// don't search through the stMatchSets[""] (minChars: 0) cache
					// this prevents duplicates
					if( k.length > 0 ){
						var c = data[k];
						$.each(c, function(i, x) {
							// if we've got a match, add it to the array
							if (matchSubset(x.value, q)) {
								csub.push(x);
							}
						});
					}
				}				
				return csub;
			} else 
			// if the exact item exists, use it
			if (data[q]){
				return data[q];
			} else
			if (options.matchSubset) {
				for (var i = q.length - 1; i >= options.minChars; i--) {
					var c = data[q.substr(0, i)];
					if (c) {
						var csub = [];
						$.each(c, function(i, x) {
							if (matchSubset(x.value, q)) {
								csub[csub.length] = x;
							}
						});
						return csub;
					}
				}
			}
			return null;
		}
	};
};

$.Autocompleter.Select = function (options, input, select, config) {
	var CLASSES = {
		ACTIVE: "ac_over"
	};
	
	var listItems,
		active = -1,
		data,
		term = "",
		needsInit = true,
		element,
		list;
	
	// Create results
	function init() {
		if (!needsInit)
			return;
		element = $("<div/>")
		.hide()
		.addClass(options.resultsClass)
		.css("position", "absolute")
		.appendTo(document.body);
	
		list = $("<ul/>").appendTo(element).mouseover( function(event) {
			if(target(event).nodeName && target(event).nodeName.toUpperCase() == 'LI') {
	            active = $("li", list).removeClass(CLASSES.ACTIVE).index(target(event));
			    $(target(event)).addClass(CLASSES.ACTIVE);            
	        }
		}).click(function(event) {
			$(target(event)).addClass(CLASSES.ACTIVE);
			select();
			// TODO provide option to avoid setting focus again after selection? useful for cleanup-on-focus
			input.focus();
			return false;
		}).mousedown(function() {
			config.mouseDownOnSelect = true;
		}).mouseup(function() {
			config.mouseDownOnSelect = false;
		});
		
		if( options.width > 0 )
			element.css("width", options.width);
			
		needsInit = false;
	} 
	
	function target(event) {
		var element = event.target;
		while(element && element.tagName != "LI")
			element = element.parentNode;
		// more fun with IE, sometimes event.target is empty, just ignore it then
		if(!element)
			return [];
		return element;
	}

	function moveSelect(step) {
		listItems.slice(active, active + 1).removeClass(CLASSES.ACTIVE);
		movePosition(step);
        var activeItem = listItems.slice(active, active + 1).addClass(CLASSES.ACTIVE);
        if(options.scroll) {
            var offset = 0;
            listItems.slice(0, active).each(function() {
				offset += this.offsetHeight;
			});
            if((offset + activeItem[0].offsetHeight - list.scrollTop()) > list[0].clientHeight) {
                list.scrollTop(offset + activeItem[0].offsetHeight - list.innerHeight());
            } else if(offset < list.scrollTop()) {
                list.scrollTop(offset);
            }
        }
	};
	
	function movePosition(step) {
		active += step;
		if (active < 0) {
			active = listItems.size() - 1;
		} else if (active >= listItems.size()) {
			active = 0;
		}
	}
	
	function limitNumberOfItems(available) {
		return options.max && options.max < available
			? options.max
			: available;
	}
	
	function fillList() {
		list.empty();
		var max = limitNumberOfItems(data.length);
		for (var i=0; i < max; i++) {
			if (!data[i])
				continue;
			var formatted = options.formatItem(data[i].data, i+1, max, data[i].value, term);
			if ( formatted === false )
				continue;
			var li = $("<li/>").html( options.highlight(formatted, term) ).addClass(i%2 == 0 ? "ac_even" : "ac_odd").appendTo(list)[0];
			$.data(li, "ac_data", data[i]);
		}
		listItems = list.find("li");
		if ( options.selectFirst ) {
			listItems.slice(0, 1).addClass(CLASSES.ACTIVE);
			active = 0;
		}
		// apply bgiframe if available
		if ( $.fn.bgiframe )
			list.bgiframe();
	}
	
	return {
		display: function(d, q) {
			init();
			data = d;
			term = q;
			fillList();
		},
		next: function() {
			moveSelect(1);
		},
		prev: function() {
			moveSelect(-1);
		},
		pageUp: function() {
			if (active != 0 && active - 8 < 0) {
				moveSelect( -active );
			} else {
				moveSelect(-8);
			}
		},
		pageDown: function() {
			if (active != listItems.size() - 1 && active + 8 > listItems.size()) {
				moveSelect( listItems.size() - 1 - active );
			} else {
				moveSelect(8);
			}
		},
		hide: function() {
			element && element.hide();
			listItems && listItems.removeClass(CLASSES.ACTIVE);
			active = -1;
		},
		visible : function() {
			return element && element.is(":visible");
		},
		current: function() {
			return this.visible() && (listItems.filter("." + CLASSES.ACTIVE)[0] || options.selectFirst && listItems[0]);
		},
		show: function() {
			var offset = $(input).offset();
			element.css({
				width: typeof options.width == "string" || options.width > 0 ? options.width : $(input).width(),
				top: offset.top + input.offsetHeight,
				left: offset.left
			}).show();
            if(options.scroll) {
                list.scrollTop(0);
                list.css({
					maxHeight: options.scrollHeight,
					overflow: 'auto'
				});
				
                if($.browser.msie && typeof document.body.style.maxHeight === "undefined") {
					var listHeight = 0;
					listItems.each(function() {
						listHeight += this.offsetHeight;
					});
					var scrollbarsVisible = listHeight > options.scrollHeight;
                    list.css('height', scrollbarsVisible ? options.scrollHeight : listHeight );
					if (!scrollbarsVisible) {
						// IE doesn't recalculate width when scrollbar disappears
						listItems.width( list.width() - parseInt(listItems.css("padding-left")) - parseInt(listItems.css("padding-right")) );
					}
                }
                
            }
		},
		selected: function() {
			var selected = listItems && listItems.filter("." + CLASSES.ACTIVE).removeClass(CLASSES.ACTIVE);
			return selected && selected.length && $.data(selected[0], "ac_data");
		},
		emptyList: function (){
			list && list.empty();
		},
		unbind: function() {
			element && element.remove();
		}
	};
};

$.fn.selection = function(start, end) {
	if (start !== undefined) {
		return this.each(function() {
			if( this.createTextRange ){
				var selRange = this.createTextRange();
				if (end === undefined || start == end) {
					selRange.move("character", start);
					selRange.select();
				} else {
					selRange.collapse(true);
					selRange.moveStart("character", start);
					selRange.moveEnd("character", end);
					selRange.select();
				}
			} else if( this.setSelectionRange ){
				this.setSelectionRange(start, end);
			} else if( this.selectionStart ){
				this.selectionStart = start;
				this.selectionEnd = end;
			}
		});
	}
	var field = this[0];
	if ( field.createTextRange ) {
		var range = document.selection.createRange(),
			orig = field.value,
			teststring = "<->",
			textLength = range.text.length;
		range.text = teststring;
		var caretAt = field.value.indexOf(teststring);
		field.value = orig;
		this.selection(caretAt, caretAt + textLength);
		return {
			start: caretAt,
			end: caretAt + textLength
		}
	} else if( field.selectionStart !== undefined ){
		return {
			start: field.selectionStart,
			end: field.selectionEnd
		}
	}
};

})(jQuery);ÓÀÙ  ô          »làô      extend     k÷Ð      autocomplete   |U	      urlOrData       :y      options    dçd©      isUrl      ´è      Autocompleter      6(      data   C±À      delay      Kk.      max	    \zû      scroll
     å§1	      highlight      jms      formatMatch    %ð­¬
      formatItem     Z`      handler    àÍ      bind   ù!pÂ      trigger    6Èc
      flushCache     .m
      setOptions     LeúÔ      unautocomplete     ,@¸Ø      KEY    (ð      DOWN   Ä;bÖ      DEL    ]þÉ      TAB    wG­ª      RETURN     NLA®      ESC    ç(>      COMMA      cf      PAGEUP     ªûlÈ      PAGEDOWN   ¦Tò²	      BACKSPACE      xÖ      $input     A¢½      attr   úøß      off     B|      addClass!   ó*v
      inputClass"     ·\o      timeout#    Â0ÿ      previousValue$      
Û,      cache%      VvË      Cache&      «Áõ      hasFocus'   ßÎ¨      lastKeyPressCode(   ~4      config)     crX      mouseDownOnSelect*      1<ë      select+     ÒÌ3°      Select,     Oð-ê      selectCurrent-      ÷_ÿ      blockSubmit.    Ò§f°      browser/    t9,¬      opera0      *gÒÛ      form1   \ñd      submit.autocomplete2    ¨±V      keypress3   ºÓ      keydown4    
±Á      .autocomplete5      II·P      event6      ­5      keyCode7    B9ºÀ      preventDefault8     ?Iq      visible9    >Æ§"      prev:   t¨$      onChange;   ÈÏÀ      pageUp<     3é<      pageDown=   ZA)      multiple>   b      trim?   9
Ä      multipleSeparator@      vô}      hideA   Qï8u      clearTimeoutB   3AtÙ
      setTimeoutC     KÌí      focusD      Äºá%      blurE   ø6+þ      hideResultsF    ªâX      clickG      õÊ      findValueCallbackH      RDo      toLowerCaseI    ð \	      trimWordsJ      &Ú      valK    l(      requestL    åÀ      flushM      íã¸¸      populateN   õþÇ®      unbindO     Å.ÈÏ      selectedP   Ë&Ó      wordsQ      HôUå	      seperatorR      ®U¾      cursorAtS   l8oi	      selectionT      QB0w      wordAtU     åÕ¿P      progressV   ¶      wordW   Ft·µ      hideResultsNowX     oÏ      crapY   ôÈÞ      skipPrevCheckZ      àºæ      currentValue[   t5²      lastWord\   ds      minChars]   CR      loadingClass^   PgC	      matchCase_      ú©      receiveData`    }³ù      stopLoadinga    9Ì      mapb    ßYã	      substringc      h      autoFilld   QÁ=      sValuee     òØóØ
      wasVisiblef     ¢zë	      mustMatchg      Ø Ì      sliceh      e}      displayi    HK      showj   WH#      termk   É©\9      successl    Ù½>R      failurem    2U)      loadn   ¥ãD      extraParamso    Bü¿;      keyp    U      paramq      ¾dÈ      ajaxr   >RÆ      ports   Dow      dataTypet    Iô¡      limitu      ü(      parsedv     5õÆ      parsew      {ù·	      emptyListx      ÓQn$      rowsy   ì%NÂ      rowz     #Ã;      formatResult{   ö+      removeClass|    ¿B      ac_input}   ½|p      resultsClass~   [«
      ac_results     Bµ©
      ac_loading     õ¦·      matchSubset    #      matchContains      v6EÊ      cacheLength    õñ      selectFirst    ëÄJû      width      ö^v      ,      Àa^      (?![^&;]+;)(?!<[^<>]*)(    2*â       ([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])   ¤1¾ó      \$1    Z[ï?      )(?![^<>]*>)(?![^&;]+;)    %óÄÁ      <strong>$1</strong>    LsA¿      scrollHeight   sc      sub    ÚEÁ      indexOf    ñûà      \b     /¶6      stMatchSets    lïcÏ      nullData   YÊ®      rawValue   ÀSÚ	      firstChar      vÄ      charAt     ðu2      push   %éµ      csub   6fØ      substr     ©B²û      CLASSES    Q;      ACTIVE     ¡Îç       ac_over    ôôb	      listItems      ¨Px      active     ?{.	      needsInit      ãÈÅ      list   u`      init   <;ë      <div/>      >      css¡    È      position¢   H<*      absolute£    çãV      appendTo¤   ¸O      document¥   h;      body¦   æ±8      <ul/>§      y÷	      mouseover¨      U5_      nodeName©   ¬âs×      toUpperCaseª    ×D	      mousedown«      =0V      mouseup¬    ÞÞØ      tagName­    ¥_ÏÓ
      parentNode®     FÁÀ
      moveSelect¯     ®6nn      step°   sô      movePosition±   ÈÙìÔ
      activeItem²     Bw      offsetHeight³   Gë	      scrollTop´      Ëú¸      clientHeightµ   0U      innerHeight¶    gä×      limitNumberOfItems·     ,ª	      available¸      ^­«      fillList¹   ¸ªý      emptyº      ±A§	      formatted»      ì®ÄK      <li/>¼      ÔãX      html½   kB-S      ac_even¾    _­x      ac_odd¿     ð5R      ac_dataÀ    eÇ      bgiframeÁ   SZK#      :visibleÂ   ëý      currentÃ    >	Å      filterÄ     $Ãç      topÅ    õ]      leftÆ   ÚÎ	      maxHeightÇ      zÁ²S      autoÈ   5¶ªä      msieÉ   ü@
      listHeightÊ     zÆGx      scrollbarsVisibleË      ·ÉÅ      heightÌ     Ôæ      padding-leftÍ   ]sý¬      padding-rightÎ      *N·Æ      removeÏ     ÜYk1      createTextRangeÐ    W1°      selRangeÑ   ÚM!      moveÒ   Ð´$	      characterÓ      #ç¢      collapseÔ   Èz	      moveStartÕ      ýÓ      moveEndÖ    #«,      setSelectionRange×      åAü¬      selectionStartØ     L0F      selectionEndÙ    Ò!      fieldÚ      ÚèS#      createRangeÛ    5þ      origÜ   i­é¸
      teststringÝ     4ëqÎ      <->Þ    îÚ
      textLengthß     3Àµ      textà   \1·      caretAtá    >å/      jQueryâ     ßÐ      autocomplete/options.highlight<ã    .ezj      autocomplete/<ä     çÎ>      $.Autocompleterå    £Ö+      $.Autocompleter/<ç      Å
ä      $.Autocompleter/</<é    ¥^è      $.Autocompleter/selectCurrent/<ì    ÂWsã      $.Autocompleter/trimWords/<ñ     Á6J       $.Autocompleter/hideResultsNow/<ô   Jö      $.Autocompleter/request/<ø      ¹Pa      $.Autocompleter.Cacheü      ¡u       $.Autocompleter.Cache/populate/<ÿ   b5¿k      $.Autocompleter.Cache/load/<   ´ìYì      $.Autocompleter.Select    Å°^¥!      $.Autocompleter.Select/init/list<     s¶#      $.Autocompleter.Select/moveSelect/<   T'ê      $.Autocompleter.Select/show/<     TèÊ      $.fn.selection    E ´¦      $.fn.selection/<     L   e  L   L             ï%,                                                                                                                                                                       	                
      
                                 
                 
                                 
                 
                 
                 
                                  
                  
          !                 "                 #      
           $      
           %      
                 
                 
                 
                 
                 
                                                    
                 
                 
                            &                 '                (      (           )      (           *      (           +      +           ,      (           -      (          .      .           /      .           0                1      1           2      2           3      2           4      2           5      2           6      1           7      1          8      8           9      1           :      1           ;      1           <      1           =      1           >      1           ?      1           @      1           A      1           B      1           C      1           D      1          E      E           F      1           G      1           H      1           I                J      J           K      ³Oc                         $ `                P                  P                                                                                                                      `  P  P  P"  P#  P$  P&  P'  P(  P*  P-  P,  P:  PI  P[  Pc  PE  PW  P_  PK  Pv  P`  P              O  v  P  Q  PR  PT  PU  P             i  V              X  Y  Z               P `             V              P  P  R               q  d                                e              Û  P               q                j  Pk  Pl    n  P             o  p                u                u  x  i  y                                               5                                                                ×`G  P               q    Û  i               i  P                                                                y               P  j                P  PI `  P  `M  L  P            s    i               q  P                    i     P    y               i  P                              q `  Pk  c  i               i  x               i  x                 P `*  P(  P  P  P  P  Pj  P  P  `  P  P `®  P°  P¶  P¸  P                             5               5                                              5                 ¯  ±  ¥ `                              ¯               ·                  i  º  R              d  q                                                                                                                                 ¥  É  PÊ                                 O                                  	            ÿ `  `Ù  È  Û  Ü  Þ  à                   Ð     ¯Â0°     Iô$KE®ú           Û  Û                      J                           o  r  s  J    k     
    q  t           P  Û  
   2   3                          )     n     !  }  ]  \    ^          f  n        c    =  ?  
  	                             P    Û                          L     M  m                <     h    9  ;  <  @  8  Â  i  O  w  N             Ä  Å     
   Æ  ¬     
    ÿ        
    ÿ     &Õª!«!L   D     ¬ð ZD                             m    »   w ß¥@`F 'ÿÿÿÿP	Pø  Ö¶R³ø  j  	              7       ½  Î   ßÁ   J   áJ   ä9   m   <   m   <   m   <	   m
   <   m   <   m   <   w ßÁ   m   L   ßÁ   J   9      <      <      <   <   <   <   <   <   
<   d<   <    9!   <"   <#   m$   <%   <&   <'   <(   <)   *   <+   m,   <-   <.   ´ </   L0   ßÁ   J   m1   L2   ßÁ   J   m3   L4   ßÁ   J   m5   L6   ß¥9` %JJJJJ"JP4'`0 `/***&(&&&''&*&*&&&&* &`0 1`0 ï`0 Pà  \Ñ­à                         ½ Î   ßÞÍ  ß¼  Í   ßÁ  áJ   ä9   Á  J   J   9   ¾         ¼           <   ¾      	      	   ¼  	   <   ¾   #      Á  J   J   J         
   <   Á         ßÁ   J	            
          <
   Á   s Î   ßÁ   Á   J         ßm      L   ßÁ   Á   J         ßÁ   J      L   ß¾  áJ   äm   s ¢¥/`*`%¦ ¦ ¸  ³ EPI
`ª@`¯@`ÿÿÿûPCQ,   ºK´^,                             ¼  ¢¥ 
`QT   «ö»T   #                        ÞÍ   ßÁ  J   ¾   Á   ã   ß¥&`	ÿÿÿæ$PP   UÇ:P                          ÞÍ   ß¾   áJ   ä   ¼  s ¢¥&` ÿÿÿñP#Q\   ;\   (                       ÞÍ   ß¾   áJ   ä   h   ¼  i    s ¢¥&` ÿÿÿíP#QH   Ånò;H                           ÞÍ   ß¾   áJ   ä   s ¢¥&` P#Q\   Tr¦Ï\   (                       ÞÍ   ß¾   áJ   ä   h   ¼  i    s ¢¥&` "ÿÿÿéP#QH   Ånò;H                           ÞÍ   ß¾   áJ   ä   s ¢¥&` P#Q°  ¿ßÔN°                  H       ½  Î   ß½ Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm	   Î   ßm
   Î   ßm   Î   ß9   &<   (<   .<   	<   <   <   ¼ <   !<   "<   <   Î   ßÁ   Á   s áJ   ä      s áJ   äÁ   J   s Î   ß   Î   ßÁ  J   áJ   äÁ   s Î   ßÎ 	  ß9   <    Î   ßÁ  J   áJ!   äÁ   Á   Á   Á   s Î   ßÁ  J"   J#   2   '   ßÁ   Á   J$   s áJ%   ä&   m'   w ,   ßÁ   áJ%   äÁ  J"   J#      0   (      0   )   0   *   &m+   s áJ,   äm-   s áJ.   äm/   s áJ0   äm1   s áJ%   ä2   m3   s áJ%   ä4   m5   s áJ%   ä6   m7   s áJ%   ä8   m9   w ß¥ÿL`%''''''(''M`ÿÿÿÿP P
%
ÿÿÿ÷P9 `+` ÿÿÿúP)` `%L` 	ÿÿÿÚP9@`  
ÿÿÿþP*ÿÿÿäPI'`¸ =ÿÿÿ½PJhÿÿÿúPJl
ÿÿÿûPJqÿÿÿúPJv
ÿÿÿñPJ  
ÿÿÿíP 
ÿÿÿíPJ  
ÿÿÿéP4  Ò0  ù0  þ0 0 "0 K0 \PL   ;´ÉL                             Á         Î   ß¢   ¥ `/`'`AV$  ëç$                   D       Î 	  ß¼  J   Î 
  ß¼  J   áÁ   J   í      áÁ   J   3     áÁ   J   y     áÁ   J   ¿  
   áÁ   J   ?      ßÁ  áJ   äÁ   J   s 	         ßÁ   J
      Á     áÁ   J   «     áÁ   J        áÁ   J   ¸      È     ¼  áJ   äw  ßÁ   áJ   äs        Á   áJ   äw  ß       Á    w ß!   £  !   ¼  áJ   äw  ßÁ   áJ   äs     &   Á   áJ   äw  ß   (   Á    w ß)   G  )   ¼  áJ   äw  ßÁ   áJ   äs     .   Á   áJ   äw  ß   0   Á    w ß1   ë   1   ¼  áJ   äw  ßÁ   áJ   äs     6   Á   áJ   äw  ß   8   Á    w ß9      9   Á    s  !   ;   ¼  áJ   äw  ßÎ   ß¢=   V   =   Á   áJ   äw  ß<   ?   »    Á   w ß»    Á   Á   J   s Î   ß   D   ¥@`G`.
`9000#@-$« ÿÿÿûP¯080 `
P$
`P-`P `PI`: `
P$
`P-`P `PI`: `
P$
`P-`P `PI!`:# `
P$
`P-`P `PI*`:- 	`@2`
P$`'`AAF6`:8 `P$`:< `ÿÿÿÿP$`

ÿÿÿëP)`JAP8   ªü8                             Á 	  0(Î 	  ß¥@`-P\   jwÂ)\   +                          Î 	  ßÁ   J         Á    w  ß   ¥ `'` `OP   ¾<T   L                  	        Á 	  0á(Î 	  ß      ßÁ   áJ   äs           Á    w ß	   ¥@` P `PIP´   Ááá8´   p                        ÜÍ   ßm   Î   ß¾   J         ¾   K         Î   ßÁ  áJ   äÁ   Á  áJ   äs  s m   w ß¥@`±@`
PÿÿÿïPÿÿÿâPDP   ²Üw¸                        ¼       ß¼ J            Í  ß   ¾  ¼ J   `      ¼ ¾  KJ   áJ   äs  ¼  áJ   äs        ¼ ¾  KÍ   ß      ¾  0(Í  ßÿÿÿ   Á         Á    ¾   w ßT      Á  áJ   ä   ¾   ,      ßh   ¾   J   i    ¾   J   i      w ß   ¥ `¥ 
 `f 
` P
P.`-`J$`@
` `ÿÿÿÿP.	`   ÿÿÿÖP)P          +   s   L   ¿ô×L                            Á   ¼ Á   Á   w ß¥ `ÿÿÿåP$P<   ¢ 8<                             Á   áJ   äw  ß¥ `P$P   ¡>H   M                        ÜÍ   ßÁ  áJ   äÁ   ¾   Kw ß   ¾   K"      Á   áJ   äw  ß   ¥&`		ÿÿÿðPD`
 `P)P   >Ê~Í   D                          Á   áJ   äw  ßÁ   áJ   äw  ßÁ   Á   J   s áJ   ä   w ß¥ `P$`P$`
ÿÿÿÿPP$P,  ¤,                  #        Á  áJ   äs  Í   ß¾         ¢   ¾   J   Í  ß¾  Î  ßÁ  J   Ú      Á   Á  áJ   äs  s Í  ß¾  J         Á  J   J   Î   ßÁ   Á  s áJ   äs  J   Î   ßÎ   ßÁ  áJ	   ä¾  m
   w ß¾  Á   ¾  Nß¾  áJ   äÁ  J   s Í  ß   ¾  Á  J   &.Í  ß   Á  áJ   ä¾  w ßÁ   w  ßÁ  áJ   ä   h   ¾   J   i    ¾   J   i   w ß¢¥ `P(`.`A"F`.`J` `
PÿÿÿøP(	` ` `ÿÿÿÿP
P.`'`ÿÿÿôPD`O`
ÿÿÿúPM`@`ÿÿÿüP$`*` ÿÿÿÞP$`!Q   Bf.   M                         Á   ¼ J   &.Î   ßÁ   Á         ¼  Î   ß¢   Á   Á   &.Î   ß¥ ` 
` `)`AF` PÈ  ².ÊÈ  6                       Á 
  Á   J         Á   áJ   äw  ß ¢   Á   áJ   äs  Í   ß¼    	   ß¾   Á   
          ¢   ¾   Î   ßÁ    ¾   s Í   ß¾   J   Á   J    m      Á   áJ   äÁ   J   w ßÁ   J         ¾   áJ	   äs  Í   ß   Á    ¾   Á   Á   w ß$      Á    w  ßÁ   áJ   äw  ß   ¥ ` `P$`AF`PH` " `AF`J`ÿÿÿ÷P(`	 `
ÿÿÿ÷P$` `P-`ÿÿÿäP `*`PIPð   ³ûfÛð      	                     ½  Î   ßÁ         h      i    ¢   Á  J   )      h   Á  áJ   äÁ   s i    ¢   Á  áJ   äÁ   áJ   äÁ  J   s m   s ¢¥)`/`OF` `ÿÿÿûPHF`
ÿÿÿúP"ÿÿÿÔPCQ   /5ù±   G                         Á  áJ   äÁ   s J   !      Á  áJ   ä¼  s          ¢¥ `ÿÿÿûP ÿÿÿûP Qt  µ}ôít  ë          	              Á   J         ¼  ¢   Á    ¼  s Í   ß¾   J         ¾   K¢   Á   Á   s áJ   äs  J   Í  ß¾  ¼  J          Á    ¼  s Í   ß;      Á    ¼  áJ   ä¼  áJ   ä¾  s    s s Í   ß   ¾   ¾   J   'K¢¥ ` `CF`
ÿÿÿÿP(` `FF`ÿÿÿÿP
P-` `ÿÿÿöP `

ÿÿÿöPÿÿÿòPÿÿÿðPM` Qh  ø°KIh  ë                         Á   J   V      ßÁ    Á   áJ   äs  s áJ   äs  ¼  áJ   äs        ßÁ 
  Á   J            Á   áJ   äÁ   áJ   äs  ¼ áJ   äÁ    Á   s J   s &w ßÁ   Á   s áJ   äÁ   J   Á   J   ¼ J   &w ß   ¥@` PÿÿÿðP
P
P &@`P
	ÿÿÿ÷PÿÿÿöPÿÿÿæPD`ÿÿÿÿP


	ÿÿÿÉPI	Pd   ©iØ9d   '                          »    Á   w ß»    Á   È s Î   ß¥ `ÿÿÿÿP$`ÿÿÿõP)P¼   º±{§¼   l                         Á   áJ   äs  Í   ßÁ   áJ   äw  ß»    Á   w ßÁ    w  ßÁ   J      	   Á   áJ   äm   w ß   ¥ `P(`P$`ÿÿÿÿP$`*`@`,EPIPD  ­LD  à                        ¼  ×      Á   J         Á    Á   áJ   äs  s áJ   äÿs Í   ßÁ   áJ   ä¾   áJ   äÁ   J   s ¾   J         Á   J               &w ß5      Á   áJ   ä   w ßÁ   áJ   ä	   w ß   ¥@
`-` `
PÿÿÿøPP(`
ÿÿÿûP#² ÿÿÿÒP> ` P$` PIPè   ¿è                            ¼ #      ß¼ J         ßÁ 	     V      Á    w  ßÁ   áJ   ä¼ ¼  w ßÁ    ¼  ¼ KJ   w ßÁ   áJ   äw  ß      Á    w  ß   ¥ `µ `*`ÿÿÿòP$`	
ÿÿÿüP$`P `O	P  2ÔÄæ  ß        
       3       ½  Î   ß½ Î   ßÁ  J         Á   áJ   äs  Î   ß   Á  áJ   äÁ   s Í   ß¾         ß¾   J      "   	   Á    Á   ¾   w ßF  
   Á  J            ßÁ  J   J      è      9   »   ã    <	   Î   ßÁ  áJ
   äÁ  J   m   w ßÁ  áJ   ä9      <      Á  J   &<   Á  J   <   Á  J   <   Á  áJ   ä9   Á   Á   s <   Á  J   <   Á   s <   m   <   w ß'   0   Á  áJ   äw  ß¼  Á   w ß3   ¥ ` `P.`ÿÿÿûPH`§ `ÿÿÿùPN`¼@
`% 
PO`
ÿÿÿæPD`EJ //%ÿÿÿ÷P(/EPHJP>"@$`P$`ÿÿÿÿPI'Pd   êYAd   3                         Á   ¼  ¼       ¼  s        ¼    Nß¥ ` P PÐ   ëF´Ð   z                 	       Á  J         ßÁ  áJ   ä¼  s          ßÁ   ¼  s    Í   ßÁ  áJ   äÁ   ¾   w ßÁ    Á   ¾   w ß¥ `¡ ÿÿÿúP ÿÿÿúP-`
ÿÿÿöP$`ÿÿÿùP$P   Û>                        h    Í   ß¼  áJ   ä   s Í  ßÍ  ß   ¾  ¾  J   Ø      Á  áJ   ä¾  ¾  Ks Í  ß¾     
   ¾  áJ   ä   s Í  ß¾   ¾   J   9   ¾  <   ¾  K<   Á   J	   $      ßÁ   áJ	   ä¾  ¾  Ks          ß¾  K   <
   Nß   ¾  0(Í  ßÿÿÿ   ¾   ¢¥ `*`P( `f `	ÿÿÿûP(`.` 
P(` )+¡ 5ÿÿÿîPª@"`@`$Q          '   ì   L   MÀ^L                             Á   áJ   äÁ   J   w ß¥ `
ÿÿÿôP$P0   wËµ0                            ¼  K¢¥ `Q   ¿/   I           	              ¼  áJ   ä»      ¼ áJ   äl      s &   &   ã      s ¢¥ `


ÿÿÿøP ÿÿÿÔPÿÿÿøP#QÐ   dSw×Ð      	                    ½  Î   ßm   Î   ßm   Î   ßm   Í   ßm   Î   ß9   Î   ßÎ   ß»    ¾   w ß9   Á   <   Á   <	   ¾   <
   m   <   ¢¥´@`+`7@O`ÿÿÿÿPDV`%**):  Q(  ®¡(  Ç                        Á   J         ¼  áJ   äs  Ì  ß   ¼  áJ   ä¼ s Í   ßÁ   J      9   	   ¼  áJ   äs  áJ   ä   ¼ áJ   äs  &s Í   ß   ¾   ÿ      ¢   ¾         ßÁ   J      ¢¥ ` `
P,`

ÿÿÿøP(` `
P

PÿÿÿíPM` 	`A	F`  Q   ÆÊáò   \                  	       Á   Á   J         Á    w  ß   Á   ¼  K      Á   0(Î   ß   Á   ¼  ¼ Nß¥ `	 `O` `@`-P8  ÿ¼§(  O                9       Á   J         ¢   9   Í   ßÍ  ßÁ   J         Á   L   ß   ¾   h    L   ßÍ  ßÁ   J   J   Í  ß
   ¾  ¾  ¨     Á   J   ¾  KÍ  ß¾        h   ¾  i          ¾     Í  ßÁ   áJ   ä¾  ¾  &Á   J   J   s Í  ß¾             ¾  áJ   äs áJ	   äs  Í  ß¾   ¾  K      ¾   ¾  h    Nß    9
   ¾  <   ¾  <   Á   J      %   ßÁ   áJ   ä¾  s '      (   ß¾  (   <   Í  ß¾   ¾  KáJ   ä¾  w ß¾  0á(Í  ßÁ   J   "   1   ¾   J   áJ   ä¾  w ß4   ¾  0(Í  ßNþÿÿ6   Á  áJ   ä¾   m   w ß¥ ` `A2F`*`F` `@
`O	 `` f/`@`   ¡@`
ÿÿÿåP(	` `J`P

PH` `@`%))¡ 5ÿÿÿóP¦@#` ÿÿÿûPD&	` ` ÿÿÿûPI6`0)@,`ÿÿÿîPD2P8         y   ·  \   ë\   $                         Á   áJ   0(L   ßÁ    ¼  ¼ w ß¥@`@`ÿÿÿüP$P@   áÈ#ï@                             9   Î   ßÎ   ß¥ `+`'P¤  EÛõ  Ò  	      	       (      ½  Î   ßÁ  J         ßÁ           ¢   Á  J         ßÁ  J   	      
   h    Î   ßÁ  ^   _`V      Í   ¾   J   2      Á  ¾   KÍ  ßÁ  áJ   ä¾  m   w ß   ß§ÿÿÿ   aÁ   ¢å      Á  Á   K      Á  Á   K¢º      Á  J   ¦      Á   J   'Í  ß   ¾  Á  J    v      Á  Á   áJ	   ä¾  s KÍ  ß¾  4   "   h    Î   ßÁ  áJ   ä¾  m
   w ßÁ   ¢&   ¾  0)Í  ßzÿÿÿ(   ¢¥)`  `A-F`¯@	`K` ÿÿÿ÷D
` `/`ÿÿÿøPIL`E-K` `K-K` 
 ` f ` ÿÿÿöP)
`.`+`ÿÿÿøPD(`E-F7`@,`!Q¤        {   ^          ?     x   4x   9                         Á   ¼ J   Á   s       Á   áJ   ä¼ w ß   ¥@`	ÿÿÿöP-	`
ÿÿÿûPIPp   %ÿjp   :                         Á   ¼ J   Á   s       Á   Á   J   ¼ Nß   ¥ `	ÿÿÿöP-	`@P  s¥    $              !       ½  Î   ß½ Î   ß½ Î   ß½ Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ßm   Î   ß9      <	   Î   ßÿÎ   ß
   Î 
  ßÎ   ß9   m   <   m   <   m   <   m   <   m   <   m   <   m   <   m   <   m   <   m   <   m    <!   m"   <#   ¢¥æ `%0 `H
`+`7G@n`%JuJxJ{J  J  J    J  ±  Q¤  Õ&ê¤                   "        Á          ¢   Á      s áJ   äs  áJ   äÁ   J   s áJ   ä      s áJ   ä»	   J
   s Î   ßÁ      s áJ   äÁ   s áJ   äm   s áJ   äm   s áJ   äm   s áJ   äm   s Î   ßÁ   J   )      Á   áJ   ä   Á   J   w ß"   Î   ß¥ `/`AF`
P*P*
ÿÿÿ÷P*Z*
ÿÿÿ÷PI	`P
ÿÿÿ÷P
ÿÿÿõPJÿÿÿúPJÿÿÿöPJÿÿÿøPI` ` 
ÿÿÿóPI`'P<  ¶tò<  ¿                         Á    ¼  s J   ,      ßÁ    ¼  s J   áJ   äs        w   	   Á      Á   s áJ   äÁ   J   s áJ   äÁ    ¼  s s Î   ßÁ   Á    ¼  s s áJ   äÁ   J   w ß   ¥ `ÿÿÿÿP ÿÿÿùPP `ÿÿÿøP

ÿÿÿôP
"ÿÿÿùPÿÿÿúP)`ÿÿÿùPÿÿÿÿP

ÿÿÿ÷PIP   `´Y8   G                         Á   Á    ¼  s s áJ   äÁ   J   w ßÁ    w  ßÁ   áJ   äw  ß¢¥ `ÿÿÿùPÿÿÿÿP

ÿÿÿ÷P$`J`P$`!Q4   Y>Æ 4                             Á   L   ß¥ `,P4   ¥4                             Á   L   ß¥ `,PÈ   ß3U¸   w                       ¼  J   Í   ß   ¾         ß¾   J               ¾   J   Í   ß¿ÿÿÿ   ¾         h    ¢   ¾   ¢¥ `-	f­ `@`.`EF`$QÈ             F     u×Ú  ^                ,       Á  áJ   äÁ  Á  &s áJ   äÁ  J   w ßÁ   ¼  w ßÁ  áJ   äÁ  Á  &s áJ   äÁ  J   s Í   ßÁ  J   Ý      Î   ßÁ  áJ   äÁ  s áJ   äm   w ßÁ   ¾   KJ   &Á  áJ	   äs  'Á  KJ
   @      Á  áJ	   äÁ   ¾   KJ   &Á  áJ   äs  'w ß>   &   Á   Á  áJ	   äs     *   Á  áJ	   äÁ   w ß,   ¥ `ÿÿÿòP
&
ÿÿÿôP$`ÿÿÿÿP$`ÿÿÿòP
#
ÿÿÿ÷P(` `'`ÿÿÿ÷P
ÿÿÿûPD	`	P `	PÿÿÿËP.`	P.`ÿÿÿöPIPH   ¿%Ú.H                           ÞÍ   ßÁ   ¾   J   &.Î   ß¥&` P°   õÕ°   n                  
       Á   ¼  &.Î   ßÁ   &      Á   áJ   äs  'Î   ß0      Á   Á   áJ   äs      
   Î   ß
   ¥ ` ` `P `

P.`LP   V«µA   P                         Á   J         ßÁ   J   ¼           Á   J         ¼     ¢¥ ` $(Qà  ôñ\LÐ                  1       Á   áJ   äw  ßÁ    Á 	  J   s Í   ßÍ  ß   ¾  ¾   7     Á 	  ¾  K           Á   áJ   äÁ 	  ¾  KJ   ¾  &¾   Á 	  ¾  KJ   Á 
  s Í  ß¾        ©      Á      s áJ   äÁ   áJ   ä¾  Á 
  s s áJ	   ä¾  ,      
               s áJ   äÁ   s KÍ  ßÁ  áJ   ä¾     Á 	  ¾  Kw ß!   ¾  0(Í  ß¿þÿÿ#   Á   áJ   ä   s Î   ßÁ   J   7   '   Á   áJ   äs áJ	   äÁ   J   w ßÎ   ß,   Á  J   J      /   Á   áJ   äw  ß1   ¥ `P$`
ÿÿÿÿP( `f/` `*`ÿÿÿÎP(	` `*`P
ÿÿÿëPÿÿÿòP
4¬ ÿÿÿ÷P
3ÿÿÿ÷P*`	
ÿÿÿìPI`@` P)` `
P

ÿÿÿ÷P$`L` `P)Pà         .   F  X   ãqòX   '                         Á    w  ß¼  Î 	  ß¼ Î 
  ßÁ    w  ß¥ `*`)`)`*P8   ×6G 8                             Á    w ß¥ `
P$P8   D8                             Á    ÿw ß¥ `
P$P   7ÆÖ   W                          Á         ßÁ   '         Á    Á   w ß      Á    øw ß   ¥ `« `ÿÿÿþP `
PIPÔ   [Öë#Ô                             Á   Á   áJ   äs  '#      ßÁ   &Á   áJ   äs  	   0   
   Á    Á   áJ   äs  'Á   'w ß      Á    w ß   ¥ `

P 
P `
PÿÿÿçP `
PIP   j¥Ú   ]                          Á         ßÁ   áJ   äw     ßÁ   $      ßÁ   áJ   äÁ   J   w    ßÿÎ   ß¥ ` P)` #
ÿÿÿôP)`(PX   $³}¼X   +                          Á         ßÁ   áJ   ä   s    ¢¥ `¡ P(Q¤   \ñ?°¤   n                        ÞÍ   ß¾   áJ   äs  S      ßÁ   áJ   ä   Á   J   &s K'   	   ßÁ   J         ßÁ   K   ¢¥&`P ÿÿÿóP± Q  {ØÒ  H         
       F        Á   Á  s áJ   äs  Í   ßÁ  áJ   ä9   Á  J         	   ßÁ  J            Á  J   "      Á   Á  s áJ   äs     <   ¾   J   Á  J   &<   ¾   J   <   s áJ	   äw  ßÁ  J
   h     Á  áJ   äw ßÁ  áJ   ä9   Á  J   <      <   w ßÁ  J   J   &   '   ß»   J   J   J      -   å   .   Î   ßÁ  áJ   äm   w ßÁ   Á  J   Í  ßÁ  áJ   ä   ¾     5   Á  J      6   Á   6   w ß¾  e   8   Á  áJ   äÁ  áJ   äs  »    Á  áJ   ä   s s '»    Á  áJ   ä   s s 'w ßF   ¥ `ÿÿÿÿP
P(`% Ñ JÿÿÿþP
	P-	 NPJP$` `P$`	%/J	PD` ª `'`ÿÿÿûPD` ` ¬ ÿÿÿòP$
`N`P
	 
PÿÿÿíP*	 
PÿÿÿíPÿÿÿÀPIPH   QÿXH                           ÞÍ   ßÁ   ¾   J   &.Î   ß¥&` PØ   ì\çØ                            Á   >      ßÁ   áJ   ä   Á   J   &s áJ   äÁ   J   s    Í   ß¾   9   	   ß¾   J   %      ßÁ  áJ   ä¾   K   s    ¢¥ ` ÿÿÿóP
)
ÿÿÿôP-`¯ -ÿÿÿûP(QT   «üUT   &                          Á         ßÁ   áJ   äw     ß¥ ` P)PT   -ÊT   &                          Á         ßÁ   áJ   äw     ß¥ ` P)Pè   QÀÓè  \               #       ½  Î   ß½ Î   ßÞÍ  ßÁ          ¾  áJ   äm   s ¢   ¾  KÍ   ß¾   J   Ä      »   J   áJ   äs  Í  ß¾   J   Í  ß   Í  ß¾  J	   J
   Í  ß¾  ¾  L	   ß¾   J   áJ   ä¾  s Í  ß¾   ¾  L   ß¾  áJ   ä¾  ¾  ¾  &w ß9   ¾  <   ¾  ¾  &<   ¢A      ¾   J    ,      9   ¾   J   <   ¾   J   <   ¢#   ¥ `
,`ÿÿÿûP3*F`+` ` P(`.`*` `.` ÿÿÿøP(`.`	
ÿÿÿãP$`%):*K$`	,`%.>*Vä  ãNä  W                      ÞÍ  ß¾  J   Ö      ¾  áJ   äs  Í   ßÁ          ßÁ   Á      7      ¾   áJ   ä   Á   w ß¾   áJ   äw  ß[      ¾   áJ   äw ß¾   áJ   ä   Á   w ß¾   áJ   ä   Á   w ß¾   áJ   äw  ß   q      ¾  J   (      ¾  áJ   äÁ   Á   w ß;      ¾  J	   (      ¾  Á   L	   ß¾  Á   L
   ß   ¥&` `P(	`  ` ÿÿÿîP$`	P `	P$`  ÿÿÿéP$` ÿÿÿëP$`	P@` `ÿÿÿçP.` `/`@P3õØ  `  `    `     @  n     @J      	    
    p         p  `  Û    `  Û    `      `    	  `      `I    `O  Û  =  J  I  ?  S  ÿ       p>      P    `  @  J  I  \     ]  ^  H    `>  I    `   =  >  a  Þ  ?    p  `=  I  S  ÿ  Ú  b       `c  J  H    b  I  S    `A  B    `=  J  g  >  ?  I       Û    `8  @  A  f  Û    p  `I  h  P  i    `  `v       `^  H  m  I  J  w    @       n  "  pq    @    o    {  r  s       @q    t    #  pk  w    `Þ  
  I  >  |    @  P  z  Û    `{  ]    `  `6  3       =  >  ?  ,          7  8  9    ;  <  @  A  B      `  `)    `8  !  `I  Û  H      P  "  `   `  pI     J    p#  `L  $  `     M  %  `N  0  4  
  `  p  p  p  p  p  p  p   p!  p$  p%  p  @3                            !       %    @)  +  .  /  0    1    p2  3  4    pC    pD    pF    pÛ    p    p    p    p&  `'  `Ú         P       )  `^  H      V  Û    *  `  ,  `  +  `    @J       I      H    @P  z  Û         ,  p-  `  @/  `P    0  `P  I  .  `  J    I     /  p  \    0  p(  `)  p*  p+  p-  p  @B    @L     M  .  pm  3  `¨  ©  ì R {         4  `     C  5  `)  6  `)  2  `  @     }     ¡  ¢  £  ¤  ¥  ¦  §  3  pF  4  pª  5  p«  6  p  7  `  ¬  ì ­  9  `²  8  `g  {       	     9  p²  ³  ´  µ  :  `ø  ;  `  <  `¹  I      P  »  ¼  
     ½  ¾  £  ¿  °   R   g    × À  =  `>  `?  `@  `A  `ø  B  `@  {    C  ` Á  D  `8  Ã  .      F  `²  E  `¥       @  w  Ä  ²  Å  i  	  ³    @  Æ  Ç  ¬  .  È  ¤  ¥  
  t     F  pË  ±  Ì  Í  G  `Ã  .    {  I    ¿  H  `¹  I  `Î  1  `2  p7  p8  p:  p;  p<  p  @         @=  ph  >  p  ?  p9  @  p;  A  p<  B  p@  C  p8  D  pÂ  E  pi  G  pO  H  pw  I  pN  K  `Ï  Ñ  Ò  *  Ó  Ô  Õ  Ö  ×  Ø  J  `   K  pÏ  ¤  S  Ú  P  Ý  ß  I      @ÿ     ×    @Ø    `×       @  p    pÛ    pÛ    p    p  	  p  
  p  	  @|  !  ~  }    ]  \    ^          f  
  @n    &  p    c    =    ?  '  p
  	    n   (  p%  1  p+  J  pS     `  pá  ÿXb                +  7                                  â              ã              Û              Û                                                   Ø   :   ä        ¢      å        £      å        »      å        ¼      å        ¾      å        È      å        À      G        Ç      ç        Î      å        Ð      å        Ô      å        %      ,        #      é        4   
   :        A      I        >      ì        I      [        Q      c        Y      E        f      W        \   
   ñ        m      _        v      K        r      ô        s      k              v              `                       	   
        M     ø                     $              (     M        &     ü        :     L        B     m        <     ÿ        ?     ÿ        ê  $           k             Z  	          c            g            i                              ®                         °             ¶             ¸        ¬     h        ­             ®     9        ¯     ;        °     <        ²     @        ¶     8        ¹     Â        Á     i        ¿            Þ     O        æ     w        è     N                                H©À      S      S                K  S  C  S               x  <  p  <                 (  A     A     4             7     7                 O    G    #                Ñ    Ñ  &              è    à    )               +  h  #  h  ,                ³  {  ³  /              Ó  þ)  Ë  þ)  4                 Ï  ~  Ï  S   G             	  ð  	  ð  [   T                 ø                      â    â                   ò  t  ê  t  ¥                ã    ã  ª                  j  ÿ  j  ­                 Þ    Þ  º   +                 ø    ½                 5  ¿  -  ¿  ¿                 à  6  Ø  6  Ä   $           T    >    Ë                Ô  m  Ì  m  Ù               !  N    N  ï             e  G  S  G                   B  ø  B    @            \  Â  K  Â                a  Ò  P  Ò  $              ê  7   Ö  7   /              R   "  ;   "  4               !  "  !  "  <              µ"  q#  ¡"  q#  M            #  =(  u#  =(  X              9%  %  1%  %  e  (            ê&  y'  â&  y'  t              P(  ¯)  B(  ¯)                Ç)  ú)  ³)  ú)                 5+  M+  -+  M+  ¦              À+  ,  ¸+  ,  ¬            Õ,  é9  Í,  é9  ³  !            -  !.  -  !.  ¸              2.  ¬.  &.  ¬.  Ã             Á.  4  °.  4  Í                4  4  4  4  ù              ä4  5  Ö4  5               T5  ã9  L5  ã9                7  8  z7  8                J9  ¨9  B9  ¨9  0            :  N  :  N  >  #           Ú:  s>  Í:  s>  L               ¶;  ²<  ®;  ²<  U  :            Â<  =  º<  =  Z              ¥=  Ñ=  =  Ñ=  `               ã=  >  Û=  >  b               >  y?  x>  y?  l            ?  B  |?  B  v             µ@  ß@  ­@  ß@  |  5             -B  ¾B  B  ¾B                ÝB  >C  ÂB  >C                SC  ÌE  BC  ÌE                 ìE  ,F  äE  ,F  ­              >F  XF  6F  XF  ³               jF  F  bF  F  ¶               F  	G  F  	G  ¹               G  ÆG  G  ÆG  À               ØG  EH  ÐG  EH  Ç               [H  H  SH  H  Ì              ¥H  I  H  I  Ï             /I  @M  'I  @M  Ò              UK  K  MK  K  â               VM  
N  NM  
N  ï               "N  BN  N  BN  ó               VN  ~N  NN  ~N  ö              N  S  N  S  ü             æN  üP  ÞN  üP  þ             5¡Ýé?;~bìb0è      gøÞûgøÞûHõgøåw   [    O^partitionKey=%28https%2Ccmrit.ac.in%29,:https://erp.cmrit.ac.in/js/jquery.autocomplete.js necko:classified 1 strongly-framed 1 security-info  request-method GET response-head HTTP/1.1 200 
Date: Fri, 11 Apr 2025 08:08:01 GMT
Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/8.1.22
Strict-Transport-Security: max-age=63072000; includeSubdomains; preload
Permissions-Policy: geolocation=(),midi=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()
X-StackifyID: V1|7fb09734-9274-19c1-001f-25c6af57c5bb|
Accept-Ranges: bytes
ETag: W/"21271-1744298492000"
Last-Modified: Thu, 10 Apr 2025 15:21:32 GMT
Content-Type: application/javascript
Content-Length: 21271
X-Frame-Options: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Referrer-Policy: same-origin
Feature-Policy: geolocation 'self'; vibrate 'none'
Access-Control-Allow-Headers: origin, x-requested-with, content-type
 original-response-headers Date: Fri, 11 Apr 2025 08:08:01 GMT
Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/8.1.22
Strict-Transport-Security: max-age=63072000; includeSubdomains; preload
Permissions-Policy: geolocation=(),midi=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()
X-StackifyID: V1|7fb09734-9274-19c1-001f-25c6af57c5bb|
Accept-Ranges: bytes
ETag: W/"21271-1744298492000"
Last-Modified: Thu, 10 Apr 2025 15:21:32 GMT
Content-Type: application/javascript
Content-Length: 21271
X-Frame-Options: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Referrer-Policy: same-origin
Feature-Policy: geolocation 'self'; vibrate 'none'
Access-Control-Allow-Headers: origin, x-requested-with, content-type
Keep-Alive: timeout=5, max=91
Connection: Keep-Alive
 ctid 2 uncompressed-len 0 net-response-time-onstart 444 net-response-time-onstop 444 alt-data 1;21271,javascript/moz-script-bytecode-20250331133932-8l alt-data-from-child 1  5ª